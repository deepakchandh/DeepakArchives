package com.java.practice;
// https://leetcode.com/problems/daily-temperatures/
import java.util.Stack;
// dailyTemperatures
public class minimumTemperature {

    public static int[] dailyTemperatures(int[] temperatures) {
        int[] results = new int[temperatures.length];
        Stack<Integer> stack = new Stack<>();

        for(int i=0;i<temperatures.length;i++){
            while(!stack.isEmpty() && temperatures[stack.peek()] < temperatures[i]){
                int index = stack.pop();
                results[index] = i - index;
            }

            stack.push(i);
        }
        return results;
    }

    public static void main(String[] args) {
        System.out.println(dailyTemperatures(new int[] {73,74,75,71,69,72,76,73}));
    }
}

/*
Loop walkthrough:
ðŸ”¹ i = 0 â†’ temp = 73
Stack is empty â†’ push 0
âœ… stack = [0]

ðŸ”¹ i = 1 â†’ temp = 74
74 > 73 (temps[0])
â†’ pop 0, res[0] = 1 - 0 = 1
âœ… res = [1, 0, 0, 0, 0, 0, 0, 0]
â†’ push 1
âœ… stack = [1]

ðŸ”¹ i = 2 â†’ temp = 75
75 > 74 (temps[1])
â†’ pop 1, res[1] = 2 - 1 = 1
âœ… res = [1, 1, 0, 0, 0, 0, 0, 0]
â†’ push 2
âœ… stack = [2]

ðŸ”¹ i = 3 â†’ temp = 71
71 < 75 â†’ push 3
âœ… stack = [2, 3]

ðŸ”¹ i = 4 â†’ temp = 69
69 < 71 â†’ push 4
âœ… stack = [2, 3, 4]

ðŸ”¹ i = 5 â†’ temp = 72
72 > 69 â†’ pop 4, res[4] = 5 - 4 = 1

72 > 71 â†’ pop 3, res[3] = 5 - 3 = 2
â†’ push 5
âœ… res = [1, 1, 0, 2, 1, 0, 0, 0]
âœ… stack = [2, 5]

ðŸ”¹ i = 6 â†’ temp = 76
76 > 72 â†’ pop 5, res[5] = 6 - 5 = 1

76 > 75 â†’ pop 2, res[2] = 6 - 2 = 4
â†’ push 6
âœ… res = [1, 1, 4, 2, 1, 1, 0, 0]
âœ… stack = [6]

ðŸ”¹ i = 7 â†’ temp = 73
73 < 76 â†’ push 7
âœ… stack = [6, 7]
 */
